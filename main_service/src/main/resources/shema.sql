CREATE TABLE IF NOT EXISTS categories
(
    id            bigint GENERATED BY DEFAULT AS IDENTITY,
    category_name varchar(255) NOT NULL UNIQUE,
    CONSTRAINT pk_categories PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS compilations
(
    compilation_id bigint GENERATED BY DEFAULT AS IDENTITY,
    pinned         boolean      NOT NULL,
    title          varchar(500) NOT NULL,
    CONSTRAINT pk_compilations PRIMARY KEY (compilation_id)
);

CREATE TABLE IF NOT EXISTS users
(
    user_id    bigint GENERATED BY DEFAULT AS IDENTITY,
    first_name varchar(255) NOT NULL,
    email      varchar(100) NOT NULL UNIQUE,
    CONSTRAINT pk_users PRIMARY KEY (user_id)
);

CREATE TABLE IF NOT EXISTS locations
(
    id  bigint GENERATED BY DEFAULT AS IDENTITY,
    lat float,
    lon float,
    CONSTRAINT pk_locations PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS events
(
    event_id           bigint GENERATED BY DEFAULT AS IDENTITY,
    annotation         varchar(10000)              NOT NULL,
    category_id        bigint                      NOT NULL,
    confirmed_requests bigint,
    created_on         varchar,
    description        varchar(1000)               NOT NULL,
    event_date         timestamp WITHOUT TIME ZONE NOT NULL,
    initiator_id       bigint                      NOT NULL,
    location_id        bigint                      NOT NULL,
    paid               boolean                     NOT NULL,
    participant_limit  bigint,
    published_on       varchar,
    request_moderation boolean                     NOT NULL,
    state              varchar(50)                 NOT NULL,
    title              varchar(255)                NOT NULL,
    views              bigint,
    CONSTRAINT pk_events PRIMARY KEY (event_id),
    FOREIGN KEY (category_id) REFERENCES categories (id) ON DELETE CASCADE,
    FOREIGN KEY (initiator_id) REFERENCES users (user_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS event_compilations
(
    compilation_id bigint NOT NULL,
    event_id       bigint NOT NULL,
    CONSTRAINT pk_events_compilations PRIMARY KEY (compilation_id, event_id),
    FOREIGN KEY (compilation_id) REFERENCES compilations (compilation_id) ON DELETE CASCADE,
    FOREIGN KEY (event_id) REFERENCES events (event_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS requests
(
    id           bigint GENERATED BY DEFAULT AS IDENTITY,
    created      varchar,
    event_id     bigint      NOT NULL,
    requester_id bigint      NOT NULL,
    status       varchar(50) NOT NULL,
    CONSTRAINT pk_requests PRIMARY KEY (id),
    FOREIGN KEY (event_id) REFERENCES events (event_id) ON DELETE CASCADE,
    FOREIGN KEY (requester_id) REFERENCES users (user_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS comments
(
    comment_id bigint GENERATED BY DEFAULT AS IDENTITY,
    content    varchar(10000) NOT NULL,
    creator_id bigint
        constraint pk_users REFERENCES users (user_id) ON DELETE CASCADE,
    event_id   bigint
        constraint pk_events REFERENCES events (event_id) ON DELETE CASCADE
);